#+AUTHOR: Alex Lu
#+EMAIL: alexluigit@gmail.com
#+startup: inlineimages content

* *Dirvish*

[[https://melpa.org/#/dirvish][file:https://melpa.org/packages/dirvish-badge.svg]]
[[https://github.com/alexluigit/dirvish/actions/workflows/melpazoid.yml][file:https://github.com/alexluigit/dirvish/actions/workflows/melpazoid.yml/badge.svg]]

#+begin_quote
Wish you a better dired.
#+end_quote

#+ATTR_ORG: :width 1024
[[./assets/multi-win.png]]

Check out this [[https://www.youtube.com][introduction_video_NOT_UPLOADED_YET]].

** Introduction

*Dirvish* is a minimalistic file manager based on *dired*.  This package tries to
empower dired by giving it a modern user interface, in the meantime, preserves
its customizability. Emacs users deserve a file manager that is even better than
those popular ones such as [[https://github.com/ranger/ranger][ranger]], [[y][vifm]], [[https://www.google.com/search?q=lf+go+github&oq=lf+go+github&aqs=chrome.0.69i59.3016j0j1&sourceid=chrome&ie=UTF-8][lf]] since it is not limited to a
terminal.

The name *dirvish* is a tribute to [[https://github.com/justinmk/vim-dirvish][vim-dirvish]].

*** Dependencies

| Package           | Description                      | Required |
|-------------------+----------------------------------+----------|
| =exa=               | For directory preview            | Yes      |
| =all-the-icons.el=  | Icon support                     | Optional |
| =pdftoppm=          | Generate pdf preface image       | Optional |
| =imagemagick=       | Generate image cache             | Optional |
| =ffmpegthumbnailer= | Generate video thumbnailer       | Optional |
| =epub-thumbnailer=  | Generate epub thumbnailer        | Optional |
| =zipinfo=           | Preview zip files                | Optional |
| =mediainfo=         | Show information for audio files | Optional |

*** Installation

Dirvish is available from [[https://melpa.org][Melpa]].

**** For =package.el= user

You can install it directly via =package-install= if you have melpa in your =package-archives=.

**** For =straight.el= user

#+begin_src emacs-lisp
  (straight-use-package 'dirvish)
#+end_src

Alternatively, install it by using *use-package* and *straight* in tandem.

#+begin_src emacs-lisp
  (use-package dirvish
    :straight t)
#+end_src

**** Manual install

To install it manually, first clone this repository,

#+begin_src bash
  git clone https://github.com/alexluigit/dirvish
#+end_src

then add =path/to/dirvish= to your =load-path=.

#+begin_src emacs-lisp
  (add-to-list 'load-path "/path/to/dirvish")
  (require 'dirvish)
#+end_src

*** Quickstart

After installation, just =M-x= and run =dirvish=.

Since =dirvish-mode= is just a =major-mode= derived from =dired-mode=, it respects all
of your dired config (including keymapping) in principle.

As an example, here is an excerpt from my personal dired config:

#+begin_src emacs-lisp
  (setq dired-kill-when-opening-new-dired-buffer t) ; added in emacs 28
  (setq dired-clean-confirm-killing-deleted-buffers nil)
  (setq dired-recursive-copies 'always)
  (setq dired-recursive-deletes 'always)
  (setq delete-by-moving-to-trash t)
  (setq dired-dwim-target t)
  (setq dired-listing-switches "-AGhlv --group-directories-first --time-style=long-iso")
#+end_src

** Features
*** File preview

When =dirvish-enable-preview= is non-nil, a preview window showing the content of
selected file/directory will be displayed at right side of dirvish frame.

- Debouncing ::

  Reduce unnecessary UI redraw.

- Native GIF support ::

  Navigate to a GIF file in Dirvish and check out the preview window.

- *Image cache* ::

  A image cache file, with small filesize that is unlikely to block Emacs when
  rendering, is generated when the original image file is larger than 500KB.

- Highly customizable ::

  A preview buffer is created either by an elisp function or by the help of a
  shell command. If you don't like the way dirvish creates the preview buffer
  for certain file types, take a look at =dirvish-preview-cmd-alist= (use
  =describe-variable= for more details). This
  variable determines how a preview buffer get generated for different file
  types, customize it to suit your need.

*** Improved dired commands

*Dired* is superb, but from a modern file manager's (like *ranger*, *lf*) perspective,
, some Dired commands are quite unintuitive, such as:

- When you mark some files using =dired-mark= or similar dired commands in
  DIRED-BUFFER-A, you don't have access to these markers in DIRED-BUFFER-B.
- You must specify the target directory explicitly when using =dired-do-copy=
  and its friends.
- =dired-sort-toggle-or-edit= requires you to edit *ls* command flags manually
- ...

In dirvish, you can mark files across multiple dirvish buffers, and paste/move
marked files/directory to current directory with one keystroke
(=dirvish-yank=). Besides, it provides a few drop-in replacement commands for
those not-so-modern dired commands, such as =dirvish-sort-by-criteria= is a better
version of =dired-sort-toggle-or-edit=.

*** Asynchronous I/O

To prevent emacs from getting freezes, dirvish uses external process to deal
with heavy I/O task, such as file copy/move, directory preview, or image cache
generation etc.

*** Bulit-in icon support

You don't need [[https://github.com/jtbm37/all-the-icons-dired][all-the-icons-dired]] anymore since dirvish have built-in icon
support. This native icon solution has several advantages over
*dired + all-the-icons-dired*, those are:

**** Better integration with line highlighting

  If you want to highlight current (cursor) line in dired, normally you enable
  =hl-line-mode= or add it to =dired-mode-hook=, but it doesn't play very well with
  =all-the-icons-dired-mode= due to conflict overlays. Dirvish handles line
  highlighting and icon rendering on its own.

  + hl-line-mode + all-the-icons-dired-mode ::

  [[./assets/ranger-line.png]]

  + dirvish ::

  [[./assets/dirvish-line.png]]

**** Lazy rendering

Dirvish doesn't render icons for all the files in a directory eagerly, instead
it only render icons that are displayed within the viewport. Visiting =/usr/bin=
(or any directory with over 1000 files) will no longer freeze your Emacs.

*** "Dirvish-ish" dired

Usually =dirvish= takes up the whole frame, but sometimes we prefer managing files
inside current window, just like how dired does it. To enable a single window
dirvish, you can either:

- Enable it once ::

#+begin_src emacs-lisp
  (dirvish-dired)
#+end_src

- Enable it automatically everytime you invoke =dired-jump= ::

#+begin_src emacs-lisp
  (dirvish-override-dired-jump)
#+end_src

A glimpse of single-window dirvish:

[[./assets/dirvish-one-win.png]]

*** Minibuffer file preview (extension)

*dirvish-minibuffer-preview.el* is an extension for dirvish, it provides
=dirvish-minibuf-preview-mode=, which is a feature to preview file when narrowing
file/directory candidates using minibuffer.

- Why does this feature exist? ::

  *Dirvish* and *minibuffer* seem unrelated at first glance. But when it comes to
  display a file preview, they actually share the same mechanism, that is: /get
  file path under the cursor and update preview window accordingly./ Displaying
  minibuffer file preview in a "dirvish" way, not only a lot of source code can
  be reused, but also related user configurations.  In other words, you don't
  have to configure file preview for dirvish and for minibuffer separately, they
  will always /display the same thing./

For *selectrum* or *vertico* users (only support these 2 completion UIs for now), if
you'd like to give this extension a try, all you need is:

#+begin_src emacs-lisp
  (require 'dirvish-minibuffer-preview)
  (dirvish-minibuf-preview-mode)
#+end_src

** Configuration

*** Options

| Option                          | Type     | Description                             | default                |
|---------------------------------+----------+-----------------------------------------+------------------------|
| =dirvish-cache-dir=               | String   | Cache directory                         | "~/.cache/dirvish"     |
| =dirvish-trash-dir-alist=         | Alist    | See: M-x =describe-variable=              |                        |
| =dirvish-history-length=          | Integer  | The length of history ring              | 30                     |
| =dirvish-enable-preview=          | Boolean  | Enable file preview                     | t                      |
| =dirvish-depth=                   | Integer  | Level of dirs to traverse up            | 1                      |
| =dirvish-parent-max-width=        | Float    | Max width of parent windows             | 0.12                   |
| =dirvish-preview-width=           | Float    | Width of preview window                 | 0.65                   |
| =dirvish-body-fontsize-increment= | Float    | Increase fontsize in dirvish body       | 0.1                    |
| =dirvish-footer-format=           | String   | See: M-x =describe-variable=              |                        |
| =dirvish-header-string-fn=        | Function | A function for composing header string  | dirvish--header-string |
| =dirvish-show-icons=              | Boolean  | Show icons                              | t                      |
| =dirvish-icon-delimiter=          | String   | The delimiter between icon and filename | "\t"                   |
| =dirvish-icon-monochrome=         | Boolean  | Whether icon inherit =face-at-point=      | t                      |
| =dirvish-icon-v-offset=           | Float    | Icon's vertical offset                  | 0.01                   |
| =dirvish-use-large-header=        | Boolean  | Enable large (2 lines height) header    | t                      |
| =dirvish-header-margin=           | Float    | Bottom margin of header                 | 0.1                    |
| =dirvish-preview-cmd-alist=       | Alist    | See: M-x =describe-variable=              |                        |

*** Hooks

| Hook                       | Description                             |
|----------------------------+-----------------------------------------|
| =dirvish-mode-hook=          | Hook for parent buffer initialization.  |
| =dirvish-preview-setup-hook= | Hook for preview buffer initialization. |

** Similar projects
*** Ranger.el

This package is inspired a lot by [[https://github.com/ralesi/ranger.el][ranger.el]], thanks @ralesi for bringing in
*ranger* to emacs!

Although these 2 packages have something in common, unlike *ranger.el*, which
tries to become an all-around emulation of ranger, *dirvish* is more bare-bone,
meaning it does *NOT* try to port all "goodness" from ranger. Instead, it only
aims to:

- provides a better dired UI
- support preview for directory and common file types.
- improve some dired commands, make them more intuitive and accesible.

And here are some specific differences between *dirvish* and *ranger.el*:

- Header display

  Ranger uses =header-line-format= to display its header, this approach leads to
  misaligned/mismatched header string when you have multiple parent windows. In
  contrast, dirvish uses *posframe* for that purpose.

  + Ranger ::

  [[./assets/ranger-header.png]]

  + Dirvish ::

  [[./assets/dirvish-header.png]]

- Preview buffer

  Ranger uses dired for creating both parent buffers and directory preview
  buffer, which causes a lot of undesirable behaviours. Because when you have
  multiple ranger instance running, a ranger buffer can be both a parent buffer
  in INSTANCE-1 and a preview buffer in INSTANCE-2. In this case, update
  INSTANCE-1 inevitably mutate the state of INSTANCE-2, which is definitely not
  what we want.

  In ranger, it's quite difficult to customize the setup of a preview
  buffer. The reason is, again, a preview buffer can either be a dired buffer or
  Non-dired buffer.

  To avoid this confusion, dirvish use external shell command (=exa= by default)
  for directory preview, so a preview buffer would never be a dired
  buffer. Also, you can customize the setup for preview buffer with
  =dirvish-preview-setup-hook= and =dirvish-preview-cmd-alist=.

- Keybindings

  Dirvish does not introduce any keybindings by default, see =dirvish-mode-map=
  for more details.

** Issues

- You may experience some issue with Windows since dirvish has not been tested on it
- It might have conflicts with packages that controls window placement.
- *WIP*: multiple dirvish instances across tabs (=tab-bar-mode=) and frames.
- *WIP*: mouse support.

Feel free to report issues.

** Copying

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see http://www.gnu.org/licenses/.
