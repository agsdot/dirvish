;;; dirvish-structs.el --- Dirvish data structures -*- lexical-binding: t -*-

;; This file is NOT part of GNU Emacs.

;; SPDX-License-Identifier: GPL-3.0-or-later

;;; Commentary:

;;; This file contains data structures for dirvish.

;;; Code:

(require 'dirvish-vars)
(require 'recentf)

(defmacro dirvish--get-buffer (type &rest body)
  "Return dirvish buffer with TYPE.
If BODY is non-nil, create the buffer and execute BODY in it."
  (declare (indent 1))
  `(progn
     (let* ((id (frame-parameter nil 'window-id))
            (h-name (format " *Dirvish %s-%s*" ,type id))
            (p-name (intern (format "dirvish--%s" ,type)))
            (buf (get-buffer-create h-name)))
       ,(if body
            `(with-current-buffer buf
               ,@body
               (set-frame-parameter nil p-name buf))
          `(frame-parameter nil p-name)))))

(defun dirvish-init-frame (&optional frame)
  "Initialize the dirvishs system in FRAME.
By default, this uses the current frame."
  (with-selected-frame frame
    (modify-frame-parameters
     frame '((dirvish--hash)
             (dirvish--curr)))
    ;; Don't set these variables in modify-frame-parameters
    ;; because that won't do anything if they've already been accessed
    (set-frame-parameter frame 'dirvish--hash (make-hash-table :test 'equal))
    (dirvish--get-buffer "preview"
      (setq-local mode-line-format nil))
    (dirvish--get-buffer "header"
      (setq-local face-font-rescale-alist nil))))

(defun dirvish-hash (&optional frame)
  "Return a hash containing all dirvish instance in FRAME.

The keys are the dirvish's names (automatically generated by
`cl-gensym'). The values are dirvish structs created by
`make--dirvish'.

FRAME defaults to the currently selected frame."
  ;; XXX: This must return a non-nil value to avoid breaking frames initialized
  ;; with after-make-frame-functions bound to nil.
  (or (frame-parameter frame 'dirvish--hash)
      (make-hash-table)))

(cl-defstruct (dirvish
               (:conc-name dirvish-)
               (:constructor make--dirvish))
  "Define dirvish data type.

It has following fields:

ROOT-WINDOW is the main dirvish window who is adjacent to preview window.

ONE-WINDOW-P indicate if current dirvish is a single window instance.

HEADER-FRAME is the frame created by `posframe-show' for header display.

HEADER-BUFFER is a buffer contains dirvish header text.

HEADER-WIDTH is the calculated header frame width.

PREVIEW-WINDOW is the window display file preview.

PREVIEW-BUFFER is a buffer for dirvish preview content.

PREVIEW-PIXEL-WIDTH is the pixelwise width of preview window.

WINDOW-CONF is the window configuration given by
`current-window-configuration'.

INDEX-PATH is the file path under cursor in ROOT-WINDOW.

SORT-CRITERIA is the sorting flag passed to `ls'.

SAVED-RECENTF is a backup of original `recentf-list'."
  root-window
  one-window-p
  header-frame
  (header-buffer (dirvish--get-buffer "header"))
  header-width
  preview-window
  (preview-buffer (dirvish--get-buffer "preview"))
  preview-pixel-width
  window-conf
  index-path
  (sort-criteria (cons "default" ""))
  (saved-recentf recentf-list))

(provide 'dirvish-structs)

;;; dirvish-structs.el ends here
