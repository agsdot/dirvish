;;; dirvish-diff.el --- Show diff in Dirvish preview window -*- lexical-binding: t -*-

;; Copyright (C) 2021-2022 Alex Lu
;; Author : Alex Lu <https://github.com/alexluigit>
;; Version: 0.9.7
;; Keywords: files, convenience
;; Homepage: https://github.com/alexluigit/dirvish
;; SPDX-License-Identifier: GPL-3.0-or-later
;; Package-Requires: ((emacs "27.1") (dirvish "0.9.9"))

;;; Commentary:

;; Show diff in Dirvish preview window.

;;; Code:

(declare-function magit-stage-file "magit-apply")
(declare-function magit-unstage-file "magit-apply")
(require 'dirvish)

(defvar dirvish-diff-dispatchers
  '(dirvish-preview-disable-dispatcher
    dirvish-preview-directory-exa-dispatcher
    dirvish-vc-diff-dispatcher
    dirvish-preview-default-dispatcher))

(defun dirvish-vc-diff-dispatcher (_file _dv)
  "A dispatcher function for `dirvish-diff-dispatchers'.
If `vc-diff' returns t, then show its result buffer as preview."
  (when (cl-letf (((symbol-function 'pop-to-buffer) #'ignore)
                  ((symbol-function 'message) #'ignore))
          (vc-diff))
    '(buffer . "*vc-diff*")))

(defun dirvish--magit-on-files (fn &optional fileset)
  "Execute magit function FN to FILESET."
  (unless (featurep 'magit) (user-error "Dirvish: install magit.el to use this command"))
  (setq fileset (or fileset (dired-get-marked-files)))
  (cl-dolist (file fileset) (funcall fn file))
  (dired-unmark-all-marks)
  (revert-buffer))

(defun dirvish-magit-stage-files (&optional fileset)
  "Stage vc diffs of FILESET using `magit-stage-file'."
  (interactive)
  (dirvish--magit-on-files #'magit-stage-file fileset))

(defun dirvish-magit-unstage-files (&optional fileset)
  "Unstage vc diffs of FILESET using `magit-unstage-file'."
  (interactive)
  (dirvish--magit-on-files #'magit-unstage-file fileset))

;;;###autoload
(defun dirvish-diff (&optional path)
  "Open dirvish to show diff generated by version-control tools.
If called with \\[universal-arguments], prompt for PATH,
otherwise it defaults to variable `buffer-file-name'."
  (interactive (list (and current-prefix-arg (read-file-name "Dirvish-diff: "))))
  (dirvish-here path
    :depth dirvish-depth
    :preview-dispatchers dirvish-diff-dispatchers))

(provide 'dirvish-diff)
;;; dirvish-diff.el ends here
